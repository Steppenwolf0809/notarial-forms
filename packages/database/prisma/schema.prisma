// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Document model for notarial documents
model Document {
  id           String         @id @default(cuid())
  fileName     String
  originalName String
  filePath     String
  type         DocumentType   @default(PDF_EXTRACTO)
  status       DocumentStatus @default(UPLOADED)
  size         Int            @default(0)
  notariaId    String
  metadata     Json?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt

  // Relations
  activeSessions  ActiveSession[]
  extractedFields ExtractedField[]
  formSessions    FormSession[]

  @@map("documents")
}

// Active session for document processing (Updated for session-queue)
model ActiveSession {
  id                String        @id @default(cuid())
  documentId        String
  notariaId         String
  clientName        String
  tramiteType       TramiteType
  status            SessionStatus @default(WAITING)
  priority          PriorityLevel @default(NORMAL)
  position          Int           @default(0)
  estimatedWaitTime Int           @default(0) // minutes
  expiresAt         DateTime
  readyAt           DateTime?
  calledAt          DateTime?
  completedAt       DateTime?
  metadata          Json?
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt

  // Relations
  document Document @relation(fields: [documentId], references: [id], onDelete: Cascade)

  @@map("active_sessions")
}

// Extracted fields from documents
model ExtractedField {
  id         String   @id @default(cuid())
  documentId String
  fieldName  String
  value      String
  confidence Float    @default(0.0)
  type       String?  @default("other")
  createdAt  DateTime @default(now())

  // Relations
  document Document @relation(fields: [documentId], references: [id], onDelete: Cascade)

  @@map("extracted_fields")
}

// Form session for client-completed forms (e.g., UAFE Persona Natural)
model FormSession {
  id          String   @id @default(cuid())
  accessId    String   @unique               // corto, para URL estática
  documentId  String
  formType    FormType @default(UAFE_PERSONA_NATURAL)
  ownerName   String?
  ownerCedula String?                        // usado como contraseña
  status      FormSessionStatus @default(DRAFT)
  data        Json?
  expiresAt   DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  document Document @relation(fields: [documentId], references: [id], onDelete: Cascade)

  @@map("form_sessions")
}

// Queue configuration per notaría
model QueueConfig {
  notariaId                String  @id
  maxConcurrentSessions    Int     @default(5)
  sessionTimeoutMinutes    Int     @default(120)
  readyTimeoutMinutes      Int     @default(15)
  estimatedTimePerTramite  Int     @default(20)
  enablePriorities         Boolean @default(true)
  autoExpireInactive       Boolean @default(true)
  notificationSettings     Json?
  createdAt                DateTime @default(now())
  updatedAt                DateTime @updatedAt

  @@map("queue_configs")
}

// Event logging for analytics and debugging
model EventLog {
  id        String   @id @default(uuid())
  timestamp DateTime @default(now())
  event     String
  notariaId String
  sessionId String?
  socketId  String?
  userId    String?
  data      Json?
  metadata  Json?

  @@map("event_logs")
}

// Global configuration
model GlobalConfig {
  id     String @id @default("global")
  config Json
  updatedAt DateTime @updatedAt

  @@map("global_config")
}

// Enums
enum DocumentStatus {
  UPLOADED
  PROCESSING
  EXTRACTED
  SESSION_ACTIVE
  COMPLETED
  ERROR
}

enum DocumentType {
  PDF_EXTRACTO
  PDF_DILIGENCIA
  SCREENSHOT_VEHICULO
}

enum FormType {
  UAFE_PERSONA_NATURAL
}

enum SessionStatus {
  WAITING
  READY
  ACTIVE
  COMPLETED
  EXPIRED
  CANCELLED
}

enum TramiteType {
  COMPRAVENTA
  DONACION
  CONSTITUCION_SOCIEDAD
  FIDEICOMISO
  CONSORCIO
  VEHICULO
  DILIGENCIA
  HIPOTECA
  PODER
  TESTAMENTO
  OTRO
}

enum PriorityLevel {
  LOW
  NORMAL
  HIGH
  CRITICAL
}

enum FormSessionStatus {
  DRAFT
  PENDING_REVIEW
  COMPLETED
}